{"version":3,"sources":["app/services/graph-constants.ts","app/services/graph-client/HelloAuthProvider.ts","app/services/redux-constants.ts","app/services/actions/auth-action-creators.ts","types/action.ts","app/services/actions/error-action-creator.ts","app/views/App.styles.ts","app/views/common/submit-button/SubmitButton.tsx","app/services/graph-client/graph-client.ts","app/services/actions/query-loading-action-creators.ts","app/services/actions/query-action-creator-util.ts","app/services/actions/query-action-creators.ts","app/views/authentication/profile/Profile.tsx","app/views/authentication/Authentication.tsx","app/views/common/image/Image.tsx","app/views/common/monaco/Monaco.tsx","app/views/query-response/QueryResponse.tsx","themes/index.ts","themes/dark.ts","themes/light.ts","app/services/actions/request-headers-action-creators.ts","app/views/query-runner/QueryInput.tsx","app/views/query-runner/request/HeadersList.tsx","app/views/query-runner/request/RequestHeaders.tsx","app/views/query-runner/request/Request.tsx","app/views/query-runner/QueryRunner.tsx","app/views/query-runner/util/iframe-message-parser.ts","app/views/App.tsx","app/views/classnames.ts","messages/index.js","app/middleware/localStorageMiddleware.ts","app/services/reducers/index.ts","app/services/reducers/auth-reducers.ts","app/services/reducers/query-runner-reducers.ts","app/services/reducers/query-loading-reducers.ts","app/services/reducers/query-runner-error.ts","app/services/reducers/request-headers-reducers.ts","app/services/reducers/graph-explorer-mode-reducer.ts","store/index.ts","index.tsx"],"names":["USER_INFO_URL","USER_PICTURE_URL","AUTH_URL","DEFAULT_USER_SCOPES","HelloAuthProvider","_this","this","Object","classCallCheck","hello","options","process","init","msft","oauth","version","auth","grant","scope_delim","form","msft_admin_consent","redirect_uri","window","location","pathname","scope","setInterval","refreshAccessToken","createClass","key","value","login","display","state","nonce","getAuthResponse","logout","accessToken","access_token","Promise","resolve","error","_refreshAccessToken","asyncToGenerator","regenerator_default","a","mark","_callee","token","decodedToken","currentTime","hasExpired","loginProperties","wrap","_context","prev","next","getAccessToken","sent","abrupt","signOut","jwtDecode","Date","getTime","exp","response_type","response_mode","prompt","login_hint","unique_name","domain_hint","stop","apply","arguments","QUERY_GRAPH_SUCCESS","QUERY_GRAPH_ERROR","CLEAR_QUERY_ERROR","GET_AUTH_TOKEN_SUCCESS","LOGOUT_SUCCESS","QUERY_GRAPH_RUNNING","HEADER_ADD_SUCCESS","HEADER_REMOVE_SUCCESS","SET_GRAPH_EXPLORER_MODE_SUCCESS","getAuthTokenSuccess","response","type","signOutSuccess","dispatch","setGraphExplorerMode","mode","Mode","queryResponseError","clearQueryError","SubmitButtonControl","_ref","handleOnClick","submitting","className","text","react_default","createElement","PrimaryButton","disabled","onClick","index_es","id","Spinner","size","SpinnerSize","small","GraphClient","clientOptions","authProvider","Client","initWithMiddleware","client","createClient","queryRunningStatus","queryResponse","parseResponse","resp","respHeaders","headers","forEach","val","contentType","full","get","delimiterPos","indexOf","substr","getContentType","isImageResponse","json","makeRequest","httpVerb","query","sampleHeaders","header","name","getInstance","api","sampleUrl","responseType","ResponseType","RAW","t0","post","sampleBody","put","patch","delete","ok","body","_x","_x2","runQuery","getState","authToken","selectedVerb","authenticatedRequest","graphUrl","concat","objectSpread","Authorization","Content-Type","method","fetch","then","anonymousRequest","Profile","_Component","props","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","actions","jsonUserInfo","userInfo","imageUrl","userPicture","buffer","blob","user","t1","arrayBuffer","Blob","URL","createObjectURL","t2","displayName","emailAddress","mail","userPrincipalName","profileImageUrl","setState","getInitials","initials","names","split","substring","toUpperCase","length","inherits","src","Component","connect","bindActionCreators","queryActionCreators","Authentication","signIn","tokenPresent","buttonLabel","SubmitButton","profile_Profile","authActionCreators","Image","_componentDidMount","clone","_this$props","styles","alt","style","editorDidMount","editor","getModel","getValue","formatDocument","onDidChangeModelContent","getAction","run","Monaco","onChange","verb","isDark","getTheme","palette","black","JSON","stringify","verbIsGet","FocusZone","react_monaco_editor_lib_default","width","height","language","lineNumbers","minimap","enabled","theme","QueryResponse","messages","intl","graphResponse","Pivot","PivotItem","headerText","Image_Image","padding","WithIntl","injectIntl","themes","dark","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","white","light","loadGETheme","selected","loadTheme","addRequestHeader","removeRequestHeader","QueryInputControl","handleOnRunQuery","handleOnMethodChange","handleOnUrlChange","httpMethods","Dropdown","defaultSelectedKey","selectedKey","event","TextField","ariaLabel","placeholder","defaultValue","HeadersList","handleOnHeaderDelete","headerItems","filter","react","DetailsList","items","setKey","columns","fieldName","minWidth","maxWidth","onRenderItemColumn","item","index","column","fieldContent","IconButton","iconProps","iconName","title","selectionMode","SelectionMode","none","RequestHeaders","handleOnHeaderNameChange","headerName","handleOnHeaderValueChange","headerValue","handleOnHeaderAdd","_this$state","newHeaders","toConsumableArray","_this2","Key","Value","request_HeadersList","headersAdded","headersActionCreators","Request","handleOnEditorChange","request_RequestHeaders","QueryRunner","hostOrigin","URLSearchParams","search","originIsWhitelisted","parent","postMessage","addEventListener","receiveMessage","base64Token","getAll","data","parse","atob","sampleVerb","msgEvent","handleInitMsg","handleThemeChangeMsg","msg","_parse","httpRequestMessage","payload","url","result","domain","urlParts","includes","push","extractUrl","SPACE","NEWLINE","newlineCount","positionOfSecondNewLine","word","i","test","n","char","nextChar","spl","trim","extractHeaders","OPEN_BRACE","current","previousCharIsNewLine","currentCharIsOpeningBrace","start","replace","extractBody","reduce","obj","code","onSelectVerb","setTimeout","requestHeadears","map","keys","values","option","undefined","newQuery","removeEventListener","_this$state2","isLoadingData","QueryInput_QueryInputControl","request_Request","App","handleSelectVerb","classes","classNamesFunction","getClassNames","classNames","graphExplorerMode","FocusTrapZone","app","Complete","authentication_Authentication","TryIt","marginBottom","MessageBar","messageBarType","MessageBarType","warning","isMultiline","href","target","query_runner_QueryRunner","onDismiss","statusText","status","query_response_QueryResponse","StyledApp","styled","background","semanticColors","bodyBackground","color","bodyText","paddingTop","spacing","s1","tryItMessage","queryRunnerError","src_messages","en-US","de-DE","es-ES","fr-FR","ja-JP","pt-BR","ru-RU","zh-CN","localStorageMiddleware","store","action","localStorage","setItem","combineReducers","loggerMiddleware","createLogger","level","collapsed","initializeIcons","initialState","appState","createStore","reducers","applyMiddleware","thunkMiddleware","hostDocumentLocale","geLocale","de-de","en-us","es-es","fr-fr","ja-jp","pt-br","ru-ru","zh-cn","addLocaleData","br","de","en","fr","jp","ru","zh","es","ReactDOM","render","react_redux_es","locale","views_App","document","getElementById"],"mappings":"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","file":"static/js/main.ca0b9f7b.chunk.js","sourcesContent":["export const USER_INFO_URL = 'https://graph.microsoft.com/v1.0/me';\r\nexport const USER_PICTURE_URL = 'https://graph.microsoft.com/v1.0/me/photo/$value';\r\nexport const AUTH_URL = 'https://login.microsoftonline.com';\r\nexport const ADMIN_AUTH_URL = 'https://signIn.microsoftonline.com/common/adminconsent';\r\nexport const TOKEN_URL = 'https://signIn.microsoftonline.com/common/oauth2/v2.0/token';\r\nexport const DEFAULT_USER_SCOPES = 'openid profile User.ReadWrite User.ReadBasic.All Sites.ReadWrite.All ' +\r\n'Contacts.ReadWrite People.Read Notes.ReadWrite.All Tasks.ReadWrite Mail.ReadWrite Files.ReadWrite.All' +\r\n' Calendars.ReadWrite';\r\n","import { AuthenticationProvider } from '@microsoft/microsoft-graph-client';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport hello from 'hellojs';\r\nimport { AUTH_URL, DEFAULT_USER_SCOPES } from '../graph-constants';\r\n\r\nexport class HelloAuthProvider implements AuthenticationProvider {\r\n  public hello: any;\r\n\r\n  constructor() {\r\n    const options = {\r\n      authUrl: AUTH_URL,\r\n      clientId: process.env.REACT_APP_CLIENT_ID,\r\n    };\r\n\r\n    this.hello = hello;\r\n\r\n    this.hello.init({\r\n      msft: {\r\n        oauth: {\r\n          version: 2,\r\n          auth: options.authUrl + '/common/oauth2/v2.0/authorize',\r\n          grant: options.authUrl + '/common/oauth2/v2.0/token',\r\n        },\r\n        scope_delim: ' ',\r\n\r\n        // Don't even try submitting via form.\r\n        // This means no POST operations in <=IE9\r\n        form: false,\r\n      }, msft_admin_consent: {\r\n        oauth: {\r\n          version: 2,\r\n          auth: options.authUrl + '/common/adminconsent',\r\n          grant: options.authUrl + '/common/oauth2/v2.0/token',\r\n        },\r\n        scope_delim: ' ',\r\n\r\n        // Don't even try submitting via form.\r\n        // This means no POST operations in <=IE9\r\n        form: false,\r\n      },\r\n    } as any);\r\n\r\n    this.hello.init({\r\n      msft: options.clientId,\r\n      msft_admin_consent: options.clientId,\r\n    }, {\r\n      redirect_uri: window.location.pathname,\r\n      scope: DEFAULT_USER_SCOPES,\r\n    });\r\n\r\n    setInterval(() => this.refreshAccessToken(), 1000);\r\n  }\r\n\r\n  public signIn() {\r\n    const loginProperties = {\r\n      display: 'page',\r\n      state: 'abcd',\r\n      nonce: 'graph_explorer',\r\n    };\r\n\r\n    // @ts-ignore\r\n    this.hello('msft').login(loginProperties);\r\n  }\r\n\r\n  public signOut() {\r\n    const session = this.hello('msft').getAuthResponse('msft');\r\n\r\n    if (session) {\r\n      this.hello('msft').logout();\r\n    }\r\n  }\r\n\r\n  public  getAccessToken(): Promise<any> {\r\n    try {\r\n      const accessToken = this.hello('msft')\r\n        .getAuthResponse('msft')\r\n        .access_token;\r\n      return Promise.resolve(accessToken);\r\n    } catch (error) {\r\n      return Promise.resolve(null);\r\n    }\r\n  }\r\n\r\n  public async refreshAccessToken() {\r\n      const token = await this.getAccessToken();\r\n\r\n      if (!token) {\r\n        return this.signOut();\r\n      }\r\n\r\n      const decodedToken: any = jwtDecode(token);\r\n      const currentTime = (new Date()).getTime() / 1000;\r\n      const hasExpired = currentTime > decodedToken.exp;\r\n\r\n      const loginProperties = {\r\n        display: 'none',\r\n        response_type: 'token',\r\n        response_mode: 'fragment',\r\n        nonce: 'graph_explorer',\r\n        prompt: 'none',\r\n        scope: DEFAULT_USER_SCOPES,\r\n        login_hint: decodedToken.unique_name,\r\n        domain_hint: 'organizations',\r\n      };\r\n\r\n      if (hasExpired) {\r\n        this.hello('msft').login(loginProperties);\r\n      }\r\n  }\r\n}\r\n","export const QUERY_GRAPH_SUCCESS = 'QUERY_GRAPH_SUCCESS';\r\nexport const QUERY_GRAPH_ERROR = 'QUERY_GRAPH_ERROR';\r\nexport const CLEAR_QUERY_ERROR = 'CLEAR_QUERY_ERROR';\r\nexport const GET_AUTH_TOKEN_SUCCESS = 'GET_AUTH_TOKEN_SUCCESS';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const QUERY_GRAPH_RUNNING = 'QUERY_GRAPH_RUNNING';\r\nexport const HEADER_ADD_SUCCESS = 'HEADER_ADD_SUCCESS';\r\nexport const HEADER_REMOVE_SUCCESS = 'HEADER_REMOVE_SUCCESS';\r\nexport const SET_GRAPH_EXPLORER_MODE_SUCCESS = 'SET_GRAPH_EXPLORER_MODE_SUCCESS';\r\n","import { IAction, Mode } from '../../../types/action';\r\nimport { HelloAuthProvider } from '../graph-client/HelloAuthProvider';\r\nimport { GET_AUTH_TOKEN_SUCCESS, LOGOUT_SUCCESS, SET_GRAPH_EXPLORER_MODE_SUCCESS } from '../redux-constants';\r\n\r\nexport function getAuthTokenSuccess(response: string): IAction {\r\n  return {\r\n    type: GET_AUTH_TOKEN_SUCCESS,\r\n    response,\r\n  };\r\n}\r\n\r\nexport function signOutSuccess(response: string): IAction {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n    response,\r\n  };\r\n}\r\n\r\nexport function signOut() {\r\n  new HelloAuthProvider()\r\n    .signOut();\r\n  return (dispatch: Function) => dispatch(signOutSuccess(''));\r\n}\r\n\r\nexport function setGraphExplorerMode(mode: Mode) {\r\n  return {\r\n    type: SET_GRAPH_EXPLORER_MODE_SUCCESS,\r\n    response: mode,\r\n  };\r\n}\r\n","export interface IAction {\r\n  type: string;\r\n  response: object | string;\r\n}\r\n\r\nexport enum Mode {\r\n  TryIt = 'TRYIT',\r\n  Complete = 'COMPLETE',\r\n}\r\n","import { Dispatch } from 'redux';\r\nimport { IAction } from '../../../types/action';\r\nimport { CLEAR_QUERY_ERROR, QUERY_GRAPH_ERROR } from '../redux-constants';\r\n\r\nexport function queryResponseError(response: object): IAction {\r\n  return {\r\n    type: QUERY_GRAPH_ERROR,\r\n    response,\r\n  };\r\n}\r\n\r\nexport function clearQueryError(): Function {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_QUERY_ERROR\r\n    });\r\n  };\r\n}\r\n","import { ITheme } from '@uifabric/styling';\r\n\r\nexport const appStyles = (theme: ITheme) => {\r\n  return {\r\n    app: {\r\n      background: theme.semanticColors.bodyBackground,\r\n      color: theme.semanticColors.bodyText,\r\n      paddingTop: theme.spacing.s1,\r\n      width: '100%',\r\n      height: '100vh',\r\n    },\r\n    tryItMessage: {\r\n      marginBottom: theme.spacing.s1\r\n    }\r\n  };\r\n};\r\n","import { PrimaryButton, Spinner, SpinnerSize } from 'office-ui-fabric-react';\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { ISubmitButtonControl } from '../../../../types/submit-button';\r\n\r\nconst SubmitButtonControl = ({\r\n  handleOnClick,\r\n  submitting,\r\n  className,\r\n  text,\r\n}: ISubmitButtonControl) => {\r\n    if (submitting) {\r\n        return (\r\n            <div className={className}>\r\n            <PrimaryButton disabled={submitting}\r\n              onClick={() => handleOnClick()}\r\n            >\r\n              <FormattedMessage\r\n                id={text}\r\n              />\r\n            &nbsp;\r\n            <Spinner size={SpinnerSize.small} />\r\n            </PrimaryButton>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n            <div className={className}>\r\n            <PrimaryButton\r\n                onClick={() => handleOnClick()}\r\n            >\r\n                <FormattedMessage\r\n                id={text}\r\n                />\r\n            </PrimaryButton>\r\n            </div>\r\n        );\r\n      }\r\n};\r\n\r\nexport default SubmitButtonControl;\r\n","import { Client } from '@microsoft/microsoft-graph-client';\r\nimport { HelloAuthProvider } from './HelloAuthProvider';\r\n\r\nexport class GraphClient {\r\n  private static client: Client;\r\n\r\n  private static createClient(): Client {\r\n    const authProvider = new HelloAuthProvider();\r\n\r\n    const clientOptions = {\r\n      authProvider,\r\n    };\r\n\r\n    return Client.initWithMiddleware(clientOptions);\r\n  }\r\n\r\n  public static getInstance(): Client {\r\n    if (!GraphClient.client) {\r\n      GraphClient.client = this.createClient();\r\n    }\r\n    return GraphClient.client;\r\n  }\r\n}\r\n","import { QUERY_GRAPH_RUNNING } from '../redux-constants';\r\n\r\nexport function queryRunningStatus(response: boolean): any {\r\n    return {\r\n      type: QUERY_GRAPH_RUNNING,\r\n      response,\r\n    };\r\n  }","import { ResponseType } from '@microsoft/microsoft-graph-client';\r\nimport { IAction } from '../../../types/action';\r\nimport { IQuery } from '../../../types/query-runner';\r\nimport { IRequestOptions } from '../../../types/request';\r\nimport { GraphClient } from '../graph-client';\r\nimport { QUERY_GRAPH_SUCCESS } from '../redux-constants';\r\nimport { queryResponseError } from './error-action-creator';\r\nimport { queryRunningStatus } from './query-loading-action-creators';\r\n\r\nexport function queryResponse(response: object): IAction {\r\n  return {\r\n    type: QUERY_GRAPH_SUCCESS,\r\n    response,\r\n  };\r\n}\r\n\r\nexport function anonymousRequest(dispatch: Function, query: IQuery) {\r\n\r\n  const authToken = '{token:https://graph.microsoft.com/}';\r\n  const graphUrl = `https://proxy.apisandbox.msdn.microsoft.com/svc?url=${query.sampleUrl}`;\r\n  const respHeaders: any = {};\r\n  const sampleHeaders: any = {};\r\n\r\n  if (query.sampleHeaders) {\r\n    query.sampleHeaders.forEach(header => {\r\n      if (header.name !== '' && header.value !== '') {\r\n        sampleHeaders[header.name] = header.value;\r\n      }\r\n    });\r\n  }\r\n\r\n  const headers = {\r\n    'Authorization': `Bearer ${authToken}`,\r\n    'Content-Type': 'application/json',\r\n    ...sampleHeaders\r\n  };\r\n\r\n  const options: IRequestOptions = { method: query.selectedVerb, headers };\r\n\r\n  dispatch(queryRunningStatus(true));\r\n\r\n  return fetch(graphUrl, options)\r\n  .then((resp) => {\r\n      if (resp.ok) {\r\n        return parseResponse(resp, respHeaders);\r\n      }\r\n      return resp;\r\n    })\r\n    .then((json) => {\r\n      if (json.ok === false) {\r\n        return dispatch(queryResponseError(json));\r\n      }\r\n\r\n      return dispatch(\r\n        queryResponse({\r\n          body: json,\r\n          headers: respHeaders,\r\n        }),\r\n      );\r\n    });\r\n}\r\n\r\nexport function authenticatedRequest(dispatch: Function, query: IQuery) {\r\n  return makeRequest(query.selectedVerb)(dispatch, query);\r\n}\r\n\r\nexport function isImageResponse(contentType: string) {\r\n  return (\r\n    contentType === 'application/octet-stream' ||\r\n    contentType.substr(0, 6) === 'image/'\r\n  );\r\n}\r\n\r\nexport function getContentType(headers: Headers) {\r\n  const full = headers.get('content-type');\r\n  if (full) {\r\n    const delimiterPos = full.indexOf(';');\r\n    if (delimiterPos !== -1) {\r\n      return full.substr(0, delimiterPos);\r\n    } else {\r\n      return full;\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseResponse(resp: any, respHeaders: any): Promise<any> {\r\n  resp.headers.forEach((val: any, key: any) => {\r\n    respHeaders[key] = val;\r\n  });\r\n\r\n  const contentType = getContentType(resp.headers);\r\n  if (contentType && isImageResponse(contentType)) {\r\n    return resp;\r\n  } else {\r\n    return resp.json();\r\n  }\r\n}\r\n\r\nconst makeRequest = (httpVerb: string): Function => {\r\n  return async (dispatch: Function, query: IQuery) => {\r\n    const respHeaders: any = {};\r\n    const sampleHeaders: any = {};\r\n\r\n    if (query.sampleHeaders) {\r\n      query.sampleHeaders.forEach(header => {\r\n        if (header.name !== '' && header.value !== '') {\r\n          sampleHeaders[header.name] = header.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    const client = GraphClient.getInstance()\r\n      .api(query.sampleUrl)\r\n      .headers(sampleHeaders)\r\n      .responseType(ResponseType.RAW);\r\n\r\n    let response;\r\n\r\n    dispatch(queryRunningStatus(true));\r\n\r\n    switch (httpVerb) {\r\n      case 'GET':\r\n        response = await client.get();\r\n        break;\r\n      case 'POST':\r\n        response = await client.post(query.sampleBody);\r\n        break;\r\n      case 'PUT':\r\n        response = await client.put(query.sampleBody);\r\n        break;\r\n      case 'PATCH':\r\n        response = await client.patch(query.sampleBody);\r\n        break;\r\n      case 'DELETE':\r\n        response = await client.delete();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    if (response.ok) {\r\n      const json = await parseResponse(response, respHeaders);\r\n      return dispatch(\r\n        queryResponse({\r\n          body: json,\r\n          headers: respHeaders\r\n        }),\r\n      );\r\n    }\r\n    return dispatch(queryResponseError(response));\r\n  };\r\n};\r\n","import { IQuery } from '../../../types/query-runner';\r\nimport { anonymousRequest, authenticatedRequest } from './query-action-creator-util';\r\n\r\nexport function runQuery(query: IQuery): Function {\r\n  return (dispatch: Function, getState: Function) => {\r\n    const tokenPresent = getState().authToken;\r\n\r\n    if (tokenPresent) {\r\n      return authenticatedRequest(dispatch, query);\r\n    }\r\n\r\n    return anonymousRequest(dispatch, query);\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { IProfileProps, IProfileState } from '../../../../types/profile';\r\nimport * as queryActionCreators from '../../../services/actions/query-action-creators';\r\nimport { USER_INFO_URL, USER_PICTURE_URL } from '../../../services/graph-constants';\r\n\r\nexport class Profile extends Component<IProfileProps, IProfileState> {\r\n    constructor(props: IProfileProps) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                displayName: '',\r\n                emailAddress: '',\r\n                profileImageUrl: '',\r\n            }\r\n        };\r\n    }\r\n\r\n    public componentDidMount = async () => {\r\n        const { actions } = this.props;\r\n\r\n        const jsonUserInfo = (actions) ? await actions.runQuery({\r\n            selectedVerb: 'GET',\r\n            sampleUrl: USER_INFO_URL,\r\n        }) : null;\r\n\r\n        const userInfo = jsonUserInfo.response.body;\r\n\r\n        let imageUrl = '';\r\n\r\n        try {\r\n            const userPicture = (actions) ? await actions.runQuery({\r\n                selectedVerb: 'GET',\r\n                sampleUrl: USER_PICTURE_URL,\r\n            }) : null;\r\n\r\n            if (userPicture ) {\r\n                const buffer = await userPicture.response.body.arrayBuffer();\r\n                const blob = new Blob([buffer], { type: 'image/jpeg' });\r\n                imageUrl = URL.createObjectURL(blob);\r\n            }\r\n        } catch (error) {\r\n            imageUrl = '';\r\n        }\r\n\r\n        const user = {\r\n            ...{},\r\n            displayName: userInfo.displayName,\r\n            emailAddress: userInfo.mail || userInfo.userPrincipalName,\r\n            profileImageUrl: imageUrl,\r\n        };\r\n\r\n        this.setState({\r\n            user\r\n        });\r\n\r\n    };\r\n\r\n    public getInitials = (name: string) => {\r\n        let initials = '';\r\n        if (name) {\r\n            const names = name.split(' ');\r\n            initials = names[0].substring(0, 1).toUpperCase();\r\n\r\n            if (names.length > 1) {\r\n                initials += names[names.length - 1].substring(0, 1).toUpperCase();\r\n            }\r\n        }\r\n        return initials;\r\n    };\r\n\r\n    public render() {\r\n        const { user } = this.state;\r\n        return (\r\n            <div className='profile'>\r\n                <div className='user-imageArea'>\r\n                    <img className='user-image' src={user.profileImageUrl} />\r\n                </div>\r\n                <div className='user-details'>\r\n                    <span className='user-name'>{user.displayName}</span>\r\n                    <br />\r\n                    <span className='user-email'>{user.emailAddress}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): object {\r\n    return {\r\n        actions: bindActionCreators(queryActionCreators, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Profile);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { IAuthenticationProps } from '../../../types/authentication';\r\nimport * as authActionCreators from '../../services/actions/auth-action-creators';\r\nimport { HelloAuthProvider } from '../../services/graph-client/HelloAuthProvider';\r\nimport SubmitButton from '../common/submit-button/SubmitButton';\r\nimport './authentication.scss';\r\nimport Profile  from './profile/Profile';\r\n\r\nexport class Authentication extends Component<IAuthenticationProps> {\r\n  constructor(props: IAuthenticationProps) {\r\n    super(props);\r\n  }\r\n\r\n  public signIn = async (): Promise<void> => {\r\n    new HelloAuthProvider()\r\n      .signIn();\r\n  };\r\n\r\n  public signOut = (): void => {\r\n    const { actions } = this.props;\r\n\r\n    if (actions) {\r\n      actions.signOut();\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { tokenPresent } = this.props;\r\n\r\n    const buttonLabel = tokenPresent ? 'sign out' : 'sign in';\r\n    return (\r\n      <div className='authentication-container'>\r\n        <SubmitButton\r\n          className='signIn-button'\r\n          text={buttonLabel}\r\n          handleOnClick={tokenPresent ? this.signOut : this.signIn}\r\n          submitting={false}\r\n        />\r\n        {tokenPresent && <Profile/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {\r\n    tokenPresent: !!state.authToken\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): object {\r\n  return {\r\n    actions: bindActionCreators(authActionCreators, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Authentication);\r\n","import React, { Component } from 'react';\r\nimport { IImageComponentProps, IImageComponentState } from '../../../../types/image';\r\n\r\nexport class Image extends Component<IImageComponentProps, IImageComponentState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      imageUrl: '',\r\n    };\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const { body } = this.props;\r\n\r\n    if (body) {\r\n      const buffer = await body.clone().arrayBuffer();\r\n      const blob = new Blob([buffer], { type: 'image/jpeg' });\r\n      const imageUrl = URL.createObjectURL(blob);\r\n\r\n      this.setState({ imageUrl });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { imageUrl } = this.state;\r\n    const { styles, alt } = this.props;\r\n\r\n    return (\r\n      <img style={styles} src={imageUrl} alt={alt} />\r\n    );\r\n  }\r\n}\r\n","import { FocusZone, getTheme } from 'office-ui-fabric-react';\r\nimport React from 'react';\r\nimport MonacoEditor, { ChangeHandler } from 'react-monaco-editor';\r\n\r\nimport './monaco.scss';\r\n\r\ninterface IMonaco {\r\n  body: object | string | undefined;\r\n  onChange?: ChangeHandler | undefined;\r\n  verb?: string;\r\n}\r\n\r\nfunction editorDidMount(editor: any) {\r\n  const editorHasText = !!editor.getModel().getValue();\r\n\r\n  if (editorHasText) {\r\n    formatDocument(editor);\r\n  }\r\n\r\n  editor.onDidChangeModelContent(() => {\r\n    formatDocument(editor);\r\n  });\r\n}\r\n\r\nfunction formatDocument(editor: any) {\r\n  editor.getAction('editor.action.formatDocument').run();\r\n}\r\n\r\nexport function Monaco(props: IMonaco) {\r\n\r\n  let { body } = props;\r\n  const { onChange, verb } = props;\r\n  const currentTheme = getTheme();\r\n  const isDark = currentTheme.palette.black === '#ffffff' ? true : false;\r\n\r\n  if (typeof body !== 'string') {\r\n    body = JSON.stringify(body);\r\n  }\r\n\r\n  const verbIsGet = verb === 'GET';\r\n\r\n  return (\r\n    <FocusZone disabled={true}>\r\n      <div className='monaco-editor'>\r\n        <MonacoEditor\r\n          width='800 !important'\r\n          height={verbIsGet ? '80vh' : '350px'}\r\n          value={body}\r\n          language='json'\r\n          options={{ lineNumbers: 'off', minimap: { enabled: false } }}\r\n          editorDidMount={editorDidMount}\r\n          onChange={onChange}\r\n          theme={isDark ? 'vs-dark' : 'vs'}\r\n        />\r\n      </div>\r\n    </FocusZone>\r\n  );\r\n}\r\n","import { Pivot, PivotItem } from 'office-ui-fabric-react';\r\nimport React, { Component } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IQueryResponseProps } from '../../../types/query-response';\r\nimport { Image, Monaco } from '../common';\r\nimport './query-response.scss';\r\n\r\nclass QueryResponse extends Component<IQueryResponseProps, {}> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    let body: any;\r\n    let headers;\r\n    let isImageResponse;\r\n    const { intl: { messages }, verb }: any = this.props;\r\n\r\n    const { graphResponse } = this.props;\r\n    if (graphResponse) {\r\n      body = graphResponse.body;\r\n      headers = graphResponse.headers;\r\n\r\n      if (body) {\r\n        /**\r\n         * body.body is a getter propety for the Body mixin. It is used to access the ReadableStream property.\r\n         * https://developer.mozilla.org/en-US/docs/Web/API/Body/body\r\n         */\r\n        isImageResponse = body && body.body;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='query-response'>\r\n        <Pivot className='pivot-response'>\r\n          <PivotItem\r\n            headerText={messages['Response Preview']}\r\n          >\r\n            {isImageResponse ?\r\n              <Image\r\n                styles={{ padding: '10px' }}\r\n                body={body}\r\n                alt='profile image'\r\n              />\r\n              :\r\n              <Monaco\r\n                body={body}\r\n                verb={verb}\r\n              />\r\n            }\r\n          </PivotItem>\r\n          <PivotItem\r\n            headerText={messages['Response Headers']}\r\n          >\r\n            <Monaco\r\n              body={headers}\r\n            />\r\n          </PivotItem>\r\n        </Pivot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: IQueryResponseProps) {\r\n  return {\r\n    graphResponse: state.graphResponse,\r\n  };\r\n}\r\n\r\n// @ts-ignore\r\nconst WithIntl = injectIntl(QueryResponse);\r\nexport default connect(mapStateToProps)(WithIntl);\r\n","import { IPartialTheme, loadTheme } from '@uifabric/styling';\r\n\r\nimport { dark } from './dark';\r\nimport { light } from './light';\r\n\r\nconst themes: any = {\r\n  dark,\r\n  light,\r\n};\r\n\r\nexport function loadGETheme(theme: string): void {\r\n  const selected: IPartialTheme = themes[theme];\r\n  loadTheme(selected);\r\n}\r\n","// Theme generated from https://developer.microsoft.com/en-us/fabric#/styles/themegenerator\r\nexport const dark = {\r\n  palette: {\r\n    themePrimary: '#2196f0',\r\n    themeLighterAlt: '#01060a',\r\n    themeLighter: '#051826',\r\n    themeLight: '#0a2d48',\r\n    themeTertiary: '#145a90',\r\n    themeSecondary: '#1e84d3',\r\n    themeDarkAlt: '#37a0f1',\r\n    themeDark: '#54aef3',\r\n    themeDarker: '#80c3f6',\r\n    neutralLighterAlt: '#121212',\r\n    neutralLighter: '#1c1c1c',\r\n    neutralLight: '#2c2c2c',\r\n    neutralQuaternaryAlt: '#353535',\r\n    neutralQuaternary: '#3d3d3d',\r\n    neutralTertiaryAlt: '#5e5e5e',\r\n    neutralTertiary: '#fdfdfd',\r\n    neutralSecondary: '#fefefe',\r\n    neutralPrimaryAlt: '#fefefe',\r\n    neutralPrimary: '#fdfcfc',\r\n    neutralDark: '#fefefe',\r\n    black: '#ffffff',\r\n    white: '#070707',\r\n  },\r\n};\r\n","// Theme generated from https://developer.microsoft.com/en-us/fabric#/styles/themegenerator\r\n\r\nexport const light = {\r\n  palette: {\r\n    themePrimary: '#0078d4',\r\n    themeLighterAlt: '#eff6fc',\r\n    themeLighter: '#deecf9',\r\n    themeLight: '#c7e0f4',\r\n    themeTertiary: '#71afe5',\r\n    themeSecondary: '#2b88d8',\r\n    themeDarkAlt: '#106ebe',\r\n    themeDark: '#005a9e',\r\n    themeDarker: '#004578',\r\n    neutralLighterAlt: '#f8f8f8',\r\n    neutralLighter: '#f4f4f4',\r\n    neutralLight: '#eaeaea',\r\n    neutralQuaternaryAlt: '#dadada',\r\n    neutralQuaternary: '#d0d0d0',\r\n    neutralTertiaryAlt: '#c8c8c8',\r\n    neutralTertiary: '#c2c2c2',\r\n    neutralSecondary: '#858585',\r\n    neutralPrimaryAlt: '#4b4b4b',\r\n    neutralPrimary: '#333333',\r\n    neutralDark: '#272727',\r\n    black: '#1d1d1d',\r\n    white: '#ffffff',\r\n  },\r\n};\r\n","import { IAction } from '../../../types/action';\r\nimport { HEADER_ADD_SUCCESS, HEADER_REMOVE_SUCCESS } from '../redux-constants';\r\n\r\nexport function addRequestHeader(response: object): IAction {\r\n  return {\r\n    type: HEADER_ADD_SUCCESS,\r\n    response,\r\n  };\r\n}\r\n\r\nexport function removeRequestHeader(response: object): IAction {\r\n  return {\r\n    type: HEADER_REMOVE_SUCCESS,\r\n    response,\r\n  };\r\n}\r\n\r\n","import { Dropdown, TextField } from 'office-ui-fabric-react';\r\nimport React from 'react';\r\nimport SubmitButton from '../common/submit-button/SubmitButton';\r\n\r\nimport { IQueryInputControl } from '../../../types/query-runner';\r\n\r\nexport const QueryInputControl = ({\r\n  handleOnRunQuery,\r\n  handleOnMethodChange,\r\n  handleOnUrlChange,\r\n  httpMethods,\r\n  selectedVerb,\r\n  sampleUrl,\r\n  submitting,\r\n}: IQueryInputControl) => {\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-2'>\r\n        <Dropdown\r\n          defaultSelectedKey={selectedVerb}\r\n          selectedKey={selectedVerb}\r\n          options={httpMethods}\r\n          onChange={(event, method) => handleOnMethodChange(method)}\r\n        />\r\n      </div>\r\n      <div className='col-sm-8'>\r\n        <TextField\r\n          ariaLabel='Query Sample Input'\r\n          placeholder='Query Sample'\r\n          onChange={(event, value) => handleOnUrlChange(value)}\r\n          defaultValue={sampleUrl}\r\n        />\r\n      </div>\r\n      <div className='col-sm-2 run-query-button'>\r\n        <SubmitButton\r\n          className='run-query-button'\r\n          text='Run Query'\r\n          handleOnClick={() => handleOnRunQuery()}\r\n          submitting={submitting}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { DetailsList, IColumn, IconButton, SelectionMode } from 'office-ui-fabric-react';\r\nimport * as React from 'react';\r\nimport { IHeadersListControl } from '../../../../types/request';\r\n\r\nconst HeadersList = ({\r\n  handleOnHeaderDelete,\r\n  headers\r\n}: IHeadersListControl) => {\r\n\r\nconst renderItemColumn = (item: any, index: number | undefined, column: IColumn | undefined) => {\r\n  if (column) {\r\n    const fieldContent = item[column.fieldName as keyof any] as string;\r\n    switch (column.key) {\r\n      case 'button':\r\n        return <IconButton\r\n          iconProps={{ iconName: 'Delete' }}\r\n          title='Remove request header'\r\n          ariaLabel='Remove request header'\r\n          onClick={(event) => handleOnHeaderDelete(event, item)}\r\n        />;\r\n\r\n      default:\r\n        return <span className='field-content'>{fieldContent}</span>;\r\n    }\r\n  }\r\n};\r\n\r\nconst columns = [\r\n  { key: 'key', name: 'Key', fieldName: 'name', minWidth: 300, maxWidth: 400 },\r\n  { key: 'value', name: 'Value', fieldName: 'value', minWidth: 300, maxWidth: 400 },\r\n  { key: 'button', name: '', fieldName: 'button', minWidth: 200, maxWidth: 300 }\r\n];\r\n\r\nconst headerItems = (headers) ? headers.filter((header) => {\r\n  return header.value !== '';\r\n}) : [];\r\n\r\nreturn (\r\n  <div className='headers-list'>\r\n    <DetailsList\r\n      className='detail-list'\r\n      items={headerItems}\r\n      setKey='set'\r\n      columns={columns}\r\n      onRenderItemColumn={renderItemColumn}\r\n      selectionMode={SelectionMode.none}\r\n    />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeadersList;\r\n","import { PrimaryButton, TextField } from 'office-ui-fabric-react';\r\nimport React, { Component } from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { IRequestHeadersProps } from '../../../../types/request';\r\nimport * as headersActionCreators from '../../../services/actions/request-headers-action-creators';\r\nimport HeadersList from './HeadersList';\r\n\r\nclass RequestHeaders extends Component<IRequestHeadersProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      headerName: '',\r\n      headerValue: '',\r\n    };\r\n  }\r\n\r\n  private handleOnHeaderNameChange = (name?: string) => {\r\n    if (name) {\r\n      this.setState({\r\n        headerName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleOnHeaderValueChange = (value?: string) => {\r\n    if (value) {\r\n      this.setState({ headerValue: value });\r\n    }\r\n  };\r\n\r\n  private handleOnHeaderDelete = (header: any) => {\r\n    const { actions } = this.props;\r\n    if (actions) {\r\n      actions.removeRequestHeader(header);\r\n    }\r\n  };\r\n\r\n  private handleOnHeaderAdd = () => {\r\n    if (this.state.headerName !== '') {\r\n      const { headerName, headerValue } = this.state;\r\n      const { actions } = this.props;\r\n      let { headers } = this.props;\r\n      const header = { name: headerName, value: headerValue };\r\n\r\n      if (!headers) {\r\n        headers = [{\r\n          name: '',\r\n          value: ''\r\n        }];\r\n      }\r\n\r\n      const newHeaders = [header, ...headers];\r\n\r\n      this.setState({\r\n        headerName: '',\r\n        headerValue: '',\r\n      });\r\n      if (actions) {\r\n        actions.addRequestHeader(newHeaders);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    // @ts-ignore\r\n    const { headers, intl: { messages } } = this.props;\r\n\r\n    return (\r\n      <div className='request-editor-control'>\r\n        <div className='row headers-editor'>\r\n          <div className='col-sm-5'>\r\n            <TextField className='header-input'\r\n              placeholder={messages.Key}\r\n              value={this.state.headerName}\r\n              onChange={(event, name) => this.handleOnHeaderNameChange(name)}\r\n            />\r\n          </div>\r\n          <div className='col-sm-5'>\r\n            <TextField\r\n              className='header-input'\r\n              placeholder={messages.Value}\r\n              value={this.state.headerValue}\r\n              onChange={(event, value) => this.handleOnHeaderValueChange(value)}\r\n            />\r\n          </div>\r\n          <div className='col-sm-2'>\r\n            <PrimaryButton\r\n              className='header-input-button'\r\n              onClick={() => this.handleOnHeaderAdd()}>\r\n              <FormattedMessage id='Add' />\r\n            </PrimaryButton>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <HeadersList handleOnHeaderDelete={(event: any, header: any) => this.handleOnHeaderDelete(header)}\r\n          headers={headers}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): object {\r\n  return {\r\n    actions: bindActionCreators(headersActionCreators, dispatch),\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {\r\n    headers: state.headersAdded\r\n  };\r\n}\r\n\r\n// @ts-ignore\r\nconst WithIntl = injectIntl(RequestHeaders);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithIntl);\r\n","import { Pivot, PivotItem } from 'office-ui-fabric-react';\r\nimport React from 'react';\r\nimport { IRequestComponent } from '../../../../types/request';\r\nimport { Monaco } from '../../common/monaco/Monaco';\r\nimport './request.scss';\r\nimport RequestHeaders from './RequestHeaders';\r\n\r\nconst Request = ({\r\n  sampleBody,\r\n  handleOnEditorChange,\r\n}: IRequestComponent) => {\r\n\r\n  return (\r\n    <div className='request-editors'>\r\n      <Pivot>\r\n        <PivotItem headerText='Request Body'>\r\n          <Monaco\r\n            body={sampleBody}\r\n            onChange={(value) => handleOnEditorChange(value)} />\r\n        </PivotItem>\r\n        <PivotItem headerText='Request Headers'>\r\n          <RequestHeaders\r\n          />\r\n        </PivotItem>\r\n      </Pivot>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Request;\r\n","import { IDropdownOption, loadTheme } from 'office-ui-fabric-react';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { loadGETheme } from '../../../themes';\r\nimport {\r\n  IInitMessage, IQuery, IQueryRunnerProps,\r\n  IQueryRunnerState, IThemeChangedMessage\r\n} from '../../../types/query-runner';\r\nimport * as queryActionCreators from '../../services/actions/query-action-creators';\r\nimport { addRequestHeader } from '../../services/actions/request-headers-action-creators';\r\nimport './query-runner.scss';\r\nimport { QueryInputControl } from './QueryInput';\r\nimport Request from './request/Request';\r\nimport { parse } from './util/iframe-message-parser';\r\n\r\nexport class QueryRunner extends Component<IQueryRunnerProps, IQueryRunnerState> {\r\n  constructor(props: IQueryRunnerProps) {\r\n    super(props);\r\n    this.state = {\r\n      httpMethods: [\r\n        { key: 'GET', text: 'GET' },\r\n        { key: 'POST', text: 'POST' },\r\n        { key: 'PUT', text: 'PUT' },\r\n        { key: 'PATCH', text: 'PATCH' },\r\n        { key: 'DELETE', text: 'DELETE' },\r\n      ],\r\n      selectedVerb: 'GET',\r\n      sampleUrl: 'https://graph.microsoft.com/v1.0/me/',\r\n      sampleBody: undefined,\r\n      sampleHeaders: [],\r\n    };\r\n  }\r\n\r\n  public componentDidMount = () => {\r\n    const whiteListedDomains = [\r\n      'https://docs.microsoft.com',\r\n      'https://review.docs.microsoft.com',\r\n      'https://ppe.docs.microsoft.com',\r\n      'https://docs.azure.cn'\r\n    ];\r\n\r\n    // Notify host document that GE is ready to receive messages\r\n    const hostOrigin = new URLSearchParams(location.search).get('host-origin');\r\n    const originIsWhitelisted = hostOrigin && whiteListedDomains.indexOf(hostOrigin) !== -1;\r\n\r\n    if (hostOrigin && originIsWhitelisted) {\r\n      window.parent.postMessage({ type: 'ready' }, hostOrigin);\r\n    }\r\n\r\n    // Listens for messages from host document\r\n    window.addEventListener('message', this.receiveMessage, false);\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const base64Token = urlParams.getAll('query')[0];\r\n\r\n    if (!base64Token) {\r\n      return;\r\n    }\r\n\r\n    const data = JSON.parse(atob(base64Token));\r\n    const {\r\n      sampleVerb,\r\n      sampleHeaders,\r\n      sampleUrl,\r\n      sampleBody,\r\n    } = data;\r\n\r\n    this.setState({\r\n      sampleUrl,\r\n      sampleBody,\r\n      sampleHeaders,\r\n      selectedVerb: sampleVerb,\r\n    });\r\n  };\r\n\r\n  public componentWillUnmount(): void {\r\n    window.removeEventListener('message', this.receiveMessage);\r\n  }\r\n\r\n  private receiveMessage = (event: MessageEvent): void => {\r\n    const msgEvent: IThemeChangedMessage | IInitMessage = event.data;\r\n\r\n    switch (msgEvent.type) {\r\n      case 'init':\r\n        this.handleInitMsg(msgEvent);\r\n        break;\r\n      case 'theme-changed':\r\n        this.handleThemeChangeMsg(msgEvent);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  private handleInitMsg = (msg: IInitMessage) => {\r\n    const {\r\n      verb,\r\n      headers,\r\n      url,\r\n      body\r\n    }: any = parse(msg.code);\r\n\r\n    this.setState({\r\n      sampleUrl: url,\r\n      selectedVerb: verb,\r\n    });\r\n\r\n    // Sets selected verb in App Component\r\n    this.props.onSelectVerb(verb);\r\n\r\n    /**\r\n     * We are delaying this by 1 second here so that we give Monaco's formatter time to initialize.\r\n     * If we don't put this delay, the body won't be formatted.\r\n     */\r\n    setTimeout(() => {\r\n      this.setState({\r\n        sampleBody: body\r\n      });\r\n    }, 1000);\r\n\r\n    const { actions } = this.props;\r\n\r\n    if (actions) {\r\n      const requestHeadears = headers.map((header: any) => {\r\n        return {\r\n          name: Object.keys(header)[0],\r\n          value: Object.values(header)[0]\r\n        };\r\n      });\r\n      actions.addRequestHeader(requestHeadears);\r\n    }\r\n  };\r\n\r\n  private handleThemeChangeMsg = (msg: IThemeChangedMessage) => {\r\n    loadGETheme(msg.theme);\r\n  };\r\n\r\n  private handleOnMethodChange = (option?: IDropdownOption) => {\r\n    if (option !== undefined) {\r\n      this.setState({ selectedVerb: option.text });\r\n\r\n      // Sets selected verb in App Component\r\n      this.props.onSelectVerb(option.text);\r\n    }\r\n  };\r\n\r\n  private handleOnUrlChange = (newQuery?: string) => {\r\n    if (newQuery) {\r\n      this.setState({ sampleUrl: newQuery });\r\n    }\r\n  };\r\n\r\n  private handleOnEditorChange = (body?: string) => {\r\n    if (body) {\r\n      this.setState({ sampleBody: body });\r\n    }\r\n  };\r\n\r\n\r\n  private handleOnRunQuery = () => {\r\n    const { sampleUrl, selectedVerb, sampleBody } = this.state;\r\n    const { actions, headers } = this.props;\r\n\r\n    const query: IQuery = {\r\n      sampleUrl,\r\n      selectedVerb,\r\n      sampleBody,\r\n      sampleHeaders: headers\r\n    };\r\n\r\n    if (actions) {\r\n      actions.runQuery(query);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      httpMethods,\r\n      selectedVerb,\r\n      sampleUrl,\r\n      sampleBody,\r\n    } = this.state;\r\n\r\n    const { isLoadingData } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='col-sm-12 col-lg-12'>\r\n            <QueryInputControl\r\n              handleOnRunQuery={this.handleOnRunQuery}\r\n              handleOnMethodChange={this.handleOnMethodChange}\r\n              handleOnUrlChange={this.handleOnUrlChange}\r\n              httpMethods={httpMethods}\r\n              selectedVerb={selectedVerb}\r\n              sampleUrl={sampleUrl}\r\n              submitting={isLoadingData}\r\n            />\r\n          </div>\r\n        </div>\r\n        {selectedVerb !== 'GET' &&\r\n          <div className='row'>\r\n            <div className='col-sm-12 col-lg-12'>\r\n              <Request\r\n                sampleBody={sampleBody}\r\n                handleOnEditorChange={this.handleOnEditorChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): object {\r\n  return {\r\n    actions: bindActionCreators({ ...queryActionCreators, addRequestHeader }, dispatch),\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {\r\n    isLoadingData: state.isLoadingData,\r\n    headers: state.headersAdded\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryRunner);\r\n","import { headersAdded } from '../../../services/reducers/request-headers-reducers';\r\n\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * In the request snippet the body is represented in the format below.\r\n * `\r\n *\r\n * { name: user}\r\n * `\r\n * Observe that it is preceded by a newline followed by curly braces. We use these properties to\r\n * start extracting the body from the request snippet. When a newline is followed by a curly brace\r\n * we know that we have encountered they body section of the request snippet.\r\n *\r\n * @param payload\r\n */\r\nfunction extractBody(payload: string): string {\r\n  const NEWLINE = /\\n/;\r\n  const OPEN_BRACE = /{/;\r\n  let current = 1;\r\n  let word = '';\r\n\r\n  while (current < payload.length) {\r\n    const char = payload[current];\r\n    const previousCharIsNewLine = NEWLINE.test(payload[current - 1]);\r\n    const currentCharIsOpeningBrace = OPEN_BRACE.test(char);\r\n\r\n    /**\r\n     * If the previous character is a new line and the current character is an opening brace\r\n     * then the body part of the snippet payload has been encountered. We read the body and\r\n     * return it.\r\n     */\r\n    if (previousCharIsNewLine) {\r\n      if (currentCharIsOpeningBrace) {\r\n        let start = current;\r\n\r\n        /**\r\n         * Since we know the body is the last part of the snippet payload, we start reading it from the first\r\n         * open curly brace to the end of the payload.\r\n         */\r\n        while (start < payload.length) {\r\n          word += payload[start];\r\n          start++;\r\n        }\r\n      }\r\n    }\r\n    current++;\r\n  }\r\n\r\n  return word.replace(/\\n/g, '');\r\n}\r\n\r\n/**\r\n * Headers in a request snippet are represented in the format below.\r\n * `\r\n * POST https://graph.microsoft.com/v1/me\r\n * Content-type: application/json\r\n *\r\n * `\r\n * We observe that headers begin after the second newline of the request snippet and end when a newline\r\n * is followed by a space. We use these properties to extract headers from the request snippet.\r\n *\r\n * @param payload\r\n */\r\nfunction extractHeaders(payload: string): object[] {\r\n  const SPACE = /\\s/;\r\n  const NEWLINE = /\\n/;\r\n\r\n  const headers: any = [];\r\n  let header: any = {};\r\n  let newlineCount = 0;\r\n  let positionOfSecondNewLine = 0;\r\n  let word = '';\r\n\r\n  for (let i = 0; i < payload.length; i++) {\r\n\r\n    // Gets the position of the second newline. We start reading headers from the second newline.\r\n    if (NEWLINE.test(payload[i]) && newlineCount <= 2) {\r\n      newlineCount++;\r\n      positionOfSecondNewLine = i;\r\n    }\r\n\r\n    if (newlineCount === 2) {\r\n      for (let n = positionOfSecondNewLine + 1; n < payload.length; n++) {\r\n        const char = payload[n];\r\n        const nextChar = payload[n + 1];\r\n        const isDelimeter = NEWLINE.test(char);\r\n\r\n\r\n        word += char;\r\n        if (isDelimeter) {\r\n          const spl = word.trim().split(':');\r\n\r\n          header[spl[0]] = spl[1].trim();\r\n          headers.push(header);\r\n          header = {};\r\n          word = '';\r\n        }\r\n\r\n        if (NEWLINE.test(char) && SPACE.test(nextChar)) {\r\n          return headers;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return headers;\r\n}\r\n\r\n/**\r\n * Extracts the url from a payload\r\n *\r\n * @param payload\r\n * Has the form \\n payload \\n\r\n */\r\nfunction extractUrl(payload: string): object[] {\r\n  const result: object[] = [];\r\n\r\n  // The payload has the form \\n sampleUrl \\n. After splitting it on new lines the sampleUrl will be at index 1\r\n  // of the resulting array\r\n  const sampleUrl = payload.split('\\n')[1];\r\n  const domain = 'https://graph.microsoft.com/v1.0';\r\n\r\n  // The sampleUrl has the format VERB URL, after splitting it on the space character the VERB will be at index 0\r\n  // and the URL at index 1\r\n  const urlParts = sampleUrl.split(' ');\r\n  const verb = urlParts[0];\r\n  let url = urlParts[1];\r\n\r\n  // Some urls do not have a domain only the path. For such urls we append the domain.\r\n  const hasDomain = url.includes(domain);\r\n  if (!hasDomain) {\r\n    url = domain + url;\r\n  }\r\n\r\n  result.push({ verb, url });\r\n\r\n  return result;\r\n}\r\n\r\nexport function parse(httpRequestMessage: string) {\r\n  /**\r\n   * The parser expects the http request message to start and end with a new line character, however,\r\n   * the request message it receives does not have them. Hence, we prefix and suffix the httpRequestMessage\r\n   * with new line characters.\r\n   */\r\n  const payload = `\\n${httpRequestMessage}\\n `;\r\n\r\n  const url = extractUrl(payload);\r\n  const headers = extractHeaders(payload);\r\n  const body = extractBody(payload);\r\n\r\n  const tokens = [...url, { body }];\r\n\r\n  const result = tokens.reduce((obj: object, item: object) => {\r\n    return { ...obj, ...item };\r\n  }, {});\r\n\r\n  return { ...result, headers };\r\n}\r\n","import { FocusTrapZone, ITheme, MessageBar, MessageBarType, styled } from 'office-ui-fabric-react';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { Mode } from '../../types/action';\r\nimport { clearQueryError } from '../services/actions/error-action-creator';\r\nimport { appStyles } from './App.styles';\r\nimport { Authentication } from './authentication';\r\nimport { classNames } from './classnames';\r\nimport { QueryResponse } from './query-response';\r\nimport { QueryRunner } from './query-runner';\r\n\r\ninterface IAppProps {\r\n  theme?: ITheme;\r\n  styles?: object;\r\n  error: object | null;\r\n  graphExplorerMode: Mode;\r\n}\r\n\r\ninterface IAppState {\r\n  selectedVerb: string;\r\n}\r\n\r\nclass App extends Component<IAppProps, IAppState> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n    this.state = {\r\n      selectedVerb: 'GET'\r\n    };\r\n  }\r\n\r\n  public handleSelectVerb = (verb: string) => {\r\n    this.setState({\r\n      selectedVerb: verb\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const classes = classNames(this.props);\r\n    const { graphExplorerMode, error, actions }: any = this.props;\r\n\r\n    return (\r\n      <FocusTrapZone>\r\n        <div className={`container-fluid ${classes.app}`}>\r\n          <div className='row'>\r\n            <div className='col-sm-12 col-lg-8 offset-lg-2'>\r\n            {graphExplorerMode === Mode.Complete && <Authentication />}\r\n              {graphExplorerMode === Mode.TryIt &&\r\n                <div style={{ marginBottom: 8 }}>\r\n                  <MessageBar\r\n                    messageBarType={MessageBarType.warning}\r\n                    isMultiline={false}\r\n                  >\r\n                    <p>\r\n                      To experience more functionalities, please access the main Graph Explorer site\r\n                    <a href='https://developer.microsoft.com/en-us/graph/graph-explorer' target='_blank'>here</a>\r\n                    </p>\r\n                  </MessageBar>\r\n                </div>\r\n              }\r\n              <div style={{ marginBottom: 8 }}>\r\n                <QueryRunner\r\n                  onSelectVerb={this.handleSelectVerb}\r\n                  />\r\n              </div>\r\n              {error &&\r\n                <MessageBar\r\n                  messageBarType={MessageBarType.error}\r\n                  isMultiline={false}\r\n                  onDismiss={actions.clearQueryError}\r\n                >\r\n                  {`${error.statusText} - ${error.status}`}\r\n                </MessageBar>\r\n              }\r\n              {\r\n                // @ts-ignore\r\n                <QueryResponse\r\n                  verb={this.state.selectedVerb}\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FocusTrapZone>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    error: state.queryRunnerError,\r\n    graphExplorerMode: state.graphExplorerMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ clearQueryError }, dispatch)\r\n  };\r\n};\r\n\r\nconst StyledApp = styled(App, appStyles);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledApp);\r\n","import { classNamesFunction, ITheme } from 'office-ui-fabric-react';\r\n\r\ninterface IClassNames {\r\n  theme?: ITheme;\r\n  styles?: object;\r\n}\r\n\r\nexport function classNames({ styles, theme }: IClassNames): any {\r\n  const getClassNames = classNamesFunction();\r\n  return getClassNames(styles, theme);\r\n}\r\n","import enUS from './en-US';\r\nimport deDe from './de-DE';\r\nimport esES from './es-ES';\r\nimport frFR from './fr-FR';\r\nimport jaJP from './ja-JP';\r\nimport ptBR from './pt-BR';\r\nimport ruRU from './ru-RU';\r\nimport zhCN from './zh-CN';\r\n\r\nexport default {\r\n  'en-US': enUS,\r\n  'de-DE': deDe,\r\n  'es-ES': esES,\r\n  'fr-FR': frFR,\r\n  'ja-JP': jaJP,\r\n  'pt-BR': ptBR,\r\n  'ru-RU': ruRU,\r\n  'zh-CN': zhCN\r\n}\r\n","import { IAction } from '../../types/action';\r\n\r\nconst localStorageMiddleware = (store: any) => (next: any) => (action: IAction) => {\r\n    next(action);\r\n    if (action.type === 'AUTHENTICATE_USER') {\r\n      localStorage.setItem('authenticatedUser', JSON.stringify(action.response));\r\n    }\r\n    return next(action);\r\n  };\r\n\r\nexport default localStorageMiddleware;\r\n","import { combineReducers } from 'redux';\r\nimport { authToken } from './auth-reducers';\r\nimport { graphExplorerMode } from './graph-explorer-mode-reducer';\r\nimport { isLoadingData } from './query-loading-reducers';\r\nimport { queryRunnerError } from './query-runner-error';\r\nimport { graphResponse } from './query-runner-reducers';\r\nimport { headersAdded } from './request-headers-reducers';\r\n\r\nexport default combineReducers({\r\n  authToken,\r\n  graphResponse,\r\n  isLoadingData,\r\n  queryRunnerError,\r\n  headersAdded,\r\n  graphExplorerMode,\r\n});\r\n","import { IAction } from '../../../types/action';\r\nimport { GET_AUTH_TOKEN_SUCCESS, LOGOUT_SUCCESS } from '../redux-constants';\r\n\r\nexport function authToken(state = {}, action: IAction): string|object {\r\n    switch (action.type) {\r\n        case GET_AUTH_TOKEN_SUCCESS:\r\n            return action.response;\r\n        case LOGOUT_SUCCESS:\r\n            return action.response;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { IAction } from '../../../types/action';\r\nimport { QUERY_GRAPH_ERROR, QUERY_GRAPH_SUCCESS } from '../redux-constants';\r\n\r\nexport function graphResponse(state = {}, action: IAction): any {\r\n  switch (action.type) {\r\n    case QUERY_GRAPH_SUCCESS:\r\n      return action.response;\r\n      case QUERY_GRAPH_ERROR:\r\n        return { body: {}, headers: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IAction } from '../../../types/action';\r\nimport { QUERY_GRAPH_ERROR, QUERY_GRAPH_RUNNING, QUERY_GRAPH_SUCCESS } from '../redux-constants';\r\n\r\nexport function isLoadingData(state = {}, action: IAction): any {\r\n  switch (action.type) {\r\n    case QUERY_GRAPH_RUNNING:\r\n      if (action.response) {\r\n        return action.response;\r\n      }\r\n    case QUERY_GRAPH_SUCCESS:\r\n      return false;\r\n    case QUERY_GRAPH_ERROR:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IAction } from '../../../types/action';\r\nimport { CLEAR_QUERY_ERROR, QUERY_GRAPH_ERROR, QUERY_GRAPH_SUCCESS } from '../redux-constants';\r\n\r\nexport function queryRunnerError(state = {}, action: IAction): any {\r\n  switch (action.type) {\r\n    case QUERY_GRAPH_ERROR:\r\n      return action.response;\r\n    case QUERY_GRAPH_SUCCESS:\r\n      return null;\r\n    case CLEAR_QUERY_ERROR:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IAction } from '../../../types/action';\r\nimport { HEADER_ADD_SUCCESS, HEADER_REMOVE_SUCCESS } from '../redux-constants';\r\n\r\nexport function headersAdded(state = [], action: IAction): any {\r\n  switch (action.type) {\r\n    case HEADER_ADD_SUCCESS:\r\n      return action.response;\r\n    case HEADER_REMOVE_SUCCESS:\r\n      let headers: any = [];\r\n      headers = state.filter(header => header !== action.response);\r\n      return headers;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IAction, Mode } from '../../../types/action';\r\nimport { SET_GRAPH_EXPLORER_MODE_SUCCESS } from '../redux-constants';\r\n\r\nexport function graphExplorerMode(state = Mode.Complete, action: IAction): any {\r\n  switch (action.type) {\r\n    case SET_GRAPH_EXPLORER_MODE_SUCCESS:\r\n      return action.response;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, compose, createStore, Store } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport localStorageMiddleware from '../app/middleware/localStorageMiddleware';\r\nimport reducers from '../app/services/reducers';\r\n\r\nconst loggerMiddleware = createLogger({\r\n    level: 'info',\r\n    collapsed: true,\r\n});\r\n\r\nexport const store =  (initialState: object): Store => {\r\n    return createStore(\r\n        reducers,\r\n        initialState,\r\n        applyMiddleware(thunkMiddleware, loggerMiddleware, localStorageMiddleware),\r\n        );\r\n};\r\n","import 'bootstrap/dist/css/bootstrap-grid.min.css';\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { addLocaleData, IntlProvider } from 'react-intl';\r\nimport br from 'react-intl/locale-data/br';\r\nimport de from 'react-intl/locale-data/de';\r\nimport en from 'react-intl/locale-data/en';\r\nimport es from 'react-intl/locale-data/es';\r\nimport fr from 'react-intl/locale-data/fr';\r\nimport jp from 'react-intl/locale-data/ja';\r\nimport ru from 'react-intl/locale-data/ru';\r\nimport zh from 'react-intl/locale-data/zh';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { getAuthTokenSuccess, setGraphExplorerMode } from './app/services/actions/auth-action-creators';\r\nimport { HelloAuthProvider } from './app/services/graph-client/HelloAuthProvider';\r\nimport App from './app/views/App';\r\nimport messages from './messages';\r\nimport { store } from './store';\r\nimport './styles/index.scss';\r\nimport { loadGETheme } from './themes';\r\nimport { Mode } from './types/action';\r\n\r\ninitializeIcons();\r\n\r\nconst appState = store({\r\n  authToken: '',\r\n  isLoadingData: false,\r\n  queryRunnerError: null,\r\n  headersAdded: [{ name: '', value: '' }],\r\n});\r\n\r\n\r\nnew HelloAuthProvider().getAccessToken()\r\n  .then((token) => {\r\n    if (token) {\r\n      appState.dispatch(getAuthTokenSuccess(token));\r\n    }\r\n  });\r\n\r\n\r\nconst localeMap: any = {\r\n  'de-de': 'de-DE',\r\n  'en-us': 'en-US',\r\n  'es-es': 'es-ES',\r\n  'fr-fr': 'fr-FR',\r\n  'ja-jp': 'ja-JP',\r\n  'pt-br': 'pt-BR',\r\n  'ru-ru': 'ru-RU',\r\n  'zh-cn': 'zh-CN'\r\n};\r\nconst hostDocumentLocale = new URLSearchParams(location.search).get('locale');\r\nconst geLocale = hostDocumentLocale && localeMap[hostDocumentLocale] || 'en-US';\r\n\r\naddLocaleData([\r\n  ...br,\r\n  ...de,\r\n  ...en,\r\n  ...fr,\r\n  ...jp,\r\n  ...ru,\r\n  ...zh,\r\n  ...es,\r\n]);\r\n\r\n\r\nconst theme = new URLSearchParams(location.search).get('theme');\r\nif (theme) {\r\n  loadGETheme(theme);\r\n}\r\n\r\nif (hostDocumentLocale) {\r\n  appState.dispatch(setGraphExplorerMode(Mode.TryIt));\r\n}\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={appState}>\r\n      <IntlProvider locale={geLocale} messages={(messages as { [key: string]: object })[geLocale]}>\r\n        <App />\r\n      </IntlProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}